Angular 2 — Improve performance with trackBy

https://netbasal.com/angular-2-improve-performance-with-trackby-cc147b5104e5


http://www.talkinghightech.com/en/angular-2-imporve-ngfor-preformance/

Angular2-virtual-scroll -
https://www.npmjs.com/package/angular2-virtual-scroll

Angular Infinite Scroll -
https://www.npmjs.com/package/angular2-infinite-scroll
https://plnkr.co/edit/DrEDetYnZkFxR7OWWrxS?p=preview

Angula2 Table - 
https://www.npmjs.com/package/ng2-editable-table



Angular 2/4 Tree Structure - 
https://js.devexpress.com/Demos/WidgetsGallery/Demo/TreeList/Overview/Angular/Light/


Tree Structure -
http://embed.plnkr.co/bKJNoG/

https://angular-ui-tree.github.io/angular-ui-tree/#/basic-example

** Important **
http://demos.wijmo.com/5/Angular2/TreeViewIntro/TreeViewIntro/


** Important **
https://www.npmjs.com/package/ngx-treeview


http://htmlpreview.github.io/?https://github.com/kjvelarde/angular-multiselectsearchtree/blob/master/demo/index.html


######################################################################################################################
                                                 Google Map Issue
######################################################################################################################

1) https://stackoverflow.com/questions/19003291/embed-google-map-is-wrong-displayed-until-resizing-webpage

2) https://ng2-ui.github.io/map/#/marker-with-custom-icon



Grammer check -

https://www.grammarly.com/?q=brand&utm_source=google&utm_medium=cpc&utm_campaign=search1&utm_content=76996511046&utm_term=grammerly&matchtype=e&placement=&network=g&gclid=EAIaIQobChMIh5-Cj-mq2AIVViUrCh3CkgCKEAAYASABEgIUMPD_BwE





##########################################
Cuppalab Multi select custom multiselect -
##########################################


/* Cuppalab .multiselect css */

.custom-class-example {
    color: #004f93;
}

.custom-class-example .c-token {
    background: #004f93 !important;
}

.custom-class-example .pure-checkbox label::before {
    border-color: transparent !important;
    background: transparent !important;
}

.custom-class-example .pure-checkbox label::after {
    border-color: #004f93 !important;
}

.custom-class-example .pure-checkbox input[type="checkbox"]:checked+label[_ngcontent-c1]::before {
    background: transparent !important;
}

.custom-class-example .pure-checkbox input[type="checkbox"]:checked+label[_ngcontent-c1]::after {
    border-color: gray !important;
}


###################


https://theinfogrid.com/tech/developers/angular/augury-debug-profile-angular-app/amp/



################################################################################

Regular expression creator -- https://jsfiddle.net/afh2p613/26/


var d = "(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\$%\^&\*])(^.{1,15}$)";

const pattern =  new RegExp(d);

function passwordStrengthCheck(value, config){
        if (!config) {
            return null;
        } else {

            let ergex = '';

            if (config.isContainsLowercase) {
                ergex += '(?=.*[a-z])';
            }
            if (config.isContainsNumeric) {
                ergex += '(?=.*[A-Z])';
            }
            if (config.isContainsSpecialCharacter) {
                ergex += '(?=.*[0-9])';
            }
            if (config.isContainsUppercase) {
                ergex += '(?=.*[!@#\$%\^&\*])';
            }
            
            // Check password length
             ergex += '(^.{' + (config.passwordMinLength || 5) + ',' + (config.passwordMaxLength || 20) + '}$)';

            const pattern = new RegExp(ergex);
            
            alert(ergex);

            return pattern.test(value);
            
        }
}

var config = {
  isContainsLowercase: true,
  isContainsNumeric: true,
  isContainsSpecialCharacter: true,
  isContainsUppercase: true
};
        
alert(passwordStrengthCheck('jkjA###defdgfg2@#3', config))


***********************************************************************************************
Detect changes betwwen two JSON's - 

http://jsfiddle.net/cf5ddod1/55/


<pre id="console"></pre>



html, body{
    margin: 0px;
    padding: 0px;
    height: 100%;
}

#console {
    background: black;
    color: green;
    height: 90%;
    display: block;
    padding: 20px;
    margin: 0px;
    overflow: scroll;
}


________________________________
function log(msg, indent){indent = (typeof indent == 'undefined' ? 0 : indent);for(var i = 0; i<indent; i++){msg = '  '+msg;}$("#console").append(msg+'\n');}
function dump(obj){log(JSON.stringify(obj));}
function debug(msg, indent){
//    log(msg, indent);
}


/*
http://stackoverflow.com/questions/31295545/how-to-get-only-the-changed-values-from-two-json-objects

    We are comparing two objects: a and b.
    Object b is newer and similar to a.
    We are looking for changes from a to b.
    We assume that data types haven't changed (String to Number).
    We assume that parent is either an Array or an Object.
    
    This is the "easier on the programmer, harder on the computer" method.
    It's very inefficient. Worst case is something like O(n^n).
    But this works, is easier to understand that the "correct"
     implementation, and entertained me for a bit.
*/


var a = [{"name":"node1","id":1,"is_open":true,"children":
    [
      {"name":"child1","id":2},
      {"name":"child2","id":3}
    ]
}];

var b = [{"name":"node1","id":1,"is_open":false,"children":
    [
      {"name":"child1","id":2},
      {"name":"child2","id":3}
    ]
}];




// var diff should be inside getDiff(), 
// but then we couldn't show it working
var diff;
function getDiff(a, b){
    diff = (isArray(a) ? [] : {});
    recursiveDiff(a, b, diff);
    return diff;
}

function recursiveDiff(a, b, node){
    dump(diff);
    var checked = [];
    
    for(var prop in a){
        debug(prop, 1);
        if(typeof b[prop] == 'undefined'){
            addNode(prop, '[[removed]]', node);
        }
        else if(JSON.stringify(a[prop]) != JSON.stringify(b[prop])){
            debug(typeof b[prop], 2);
            // if value
            if(typeof b[prop] != 'object' || b[prop] == null){
                addNode(prop, b[prop], node);
                debug("(added)", 3);
            }
            else {
                // if array
                if(isArray(b[prop])){
                   addNode(prop, [], node);
                   recursiveDiff(a[prop], b[prop], node[prop]);
                }
                // if object
                else {
                    addNode(prop, {}, node);
                    recursiveDiff(a[prop], b[prop], node[prop]);
                }
            }
        }
    }
}

function addNode(prop, value, parent){
        parent[prop] = value;
}

function isArray(obj){
    return (Object.prototype.toString.call(obj) === '[object Array]');
}


log('Input:');
dump(a);
dump(b);
log('');
log('Progress:');
var result = getDiff(a, b);
log('\n============================\n');
log('Result:');
dump(result);

---------------------



function isDateRangeWithinRange1(firstDateRange, secondDateRange) {

    if (!(firstDateRange.from && firstDateRange.to && secondDateRange.from && secondDateRange.to)) {
        console.log('Please provide non empty date ranges.');
        return false;
    }
    const e1start = moment(firstDateRange.from).startOf('day').valueOf();
    const e1end = moment(firstDateRange.to).startOf('day').valueOf();
    const e2start = moment(secondDateRange.from).startOf('day').valueOf();
    const e2end = moment(secondDateRange.to).startOf('day').valueOf();

    if (e1start > e1end || e2start > e2end) {
        const message = e1start > e1end ? 'First ' : 'Second' + 'date range is invalid.';
        console.log(message);
        return;
    }
    console.log('e1start ##1 ', e1start, 'e2start ##2 ', e2start , ' e1end ##3 ', e1end, 'e2end ##4 ', e2end);
    //return (e1start > e2start && e1start < e2end || e2start > e1start && e2start < e1end);
   return (e1start < e2start && e1end > e2end);
}


[8/9, 11:26 PM] AMOL BORSE: (<[^>]+\s+)(?:style\s*=\s*"(?!(?:|[^"]*[;\s])font-size\s*:[^";]*)[^"]*"|(style\s*=\s*")(?=(?:|[^"]*)(;))?(?=(?:|[^"]*[;\s])(font-size\s*:[^";]*))?[^"]*("))
[8/9, 11:35 PM] AMOL BORSE: (?:style\s*=\s*,"(?!(?:|[^"]*[;\s])font-size\s*:[^";]*)[^"]*"|(style\s*=\s*")(?=(?:|[^"]*)(;))?(?=(?:|[^"]*[;\s])(font-size\s*:[^";]*))?[^"]*)

